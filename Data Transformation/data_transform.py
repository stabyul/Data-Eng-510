# -*- coding: utf-8 -*-
"""data_transform.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vofoBTsHME5jGdO3S5uWKNoQXEUYJ2Oz
"""

import pandas as pd
# data = pd.read_csv('bc_trip259172515_230215.csv')
data = pd.read_csv('bc_veh4223_230215.csv')
print(f"There are {data.shape[0]} breadcrumbs records in the dataset")
print(data.shape)

##drop columns
# drop_data = data.drop('EVENT_NO_STOP', axis=1)
drop_data = data.drop(['EVENT_NO_STOP','GPS_SATELLITES', 'GPS_HDOP'], axis=1)
print(drop_data.shape)

# data_new = pd.read_csv('bc_trip259172515_230215.csv', usecols=lambda x: x not in ['EVENT_NO_STOP','GPS_SATELLITES', 'GPS_HDOP'])
data_new = pd.read_csv('bc_veh4223_230215.csv', usecols=lambda x: x not in ['EVENT_NO_STOP','GPS_SATELLITES', 'GPS_HDOP'])
print(data_new.shape)
print(data_new)

# clean opd date colum and remove white space and make it a string
data_new['OPD_DATE'] = data_new['OPD_DATE'].astype(str).str.strip()
#replace FEB with Feb
data_new['OPD_DATE'] = data_new['OPD_DATE'].str.replace('FEB', 'Feb')


#convert to datetime value

data_new['OPD_DATE'] = pd.to_datetime(data_new['OPD_DATE'], format='%d%b%Y:%H:%M:%S')

print(data_new)

#time delta value for act_time
data_new['ACT_TIME'] = pd.to_timedelta(data_new['ACT_TIME'], 'seconds')
print(data_new)

data_new['TIMESTAMP'] = data_new.apply(lambda y: y['OPD_DATE'] + y['ACT_TIME'], axis=1)
print(data_new)

data_new = data_new.drop(['OPD_DATE', 'ACT_TIME'], axis=1)
print(data_new)

# dMETERS and dTIMESTAMP
data_new['dMETERS'] = data_new['METERS'].diff()
data_new['dTIMESTAMP'] = data_new['TIMESTAMP'].diff()

# data_new['SPEED'] = data_new['dMETERS'] / data_new['dTIMESTAMP'].dt.total_seconds() * 3.6
data_new['SPEED'] = data_new.apply(lambda x:x['dMETERS'] / x['dTIMESTAMP'].total_seconds(), axis=1)
print(data_new)

data_new['SPEED'] = data_new.apply(lambda x: x['dMETERS'] / x['dTIMESTAMP'].total_seconds() * 3.6 if x['dTIMESTAMP'] != pd.NaT else 0, axis=1)

data_new = data_new.drop(['dMETERS', 'dTIMESTAMP'], axis=1)
print(data_new)

data_max = data_new['SPEED'].max()
data_min = data_new['SPEED'].min()
data_average = data_new['SPEED'].sum() / len(data_new['SPEED'])
print(f'Maximum speed: {data_max} m/s')
print(f'Minimum speed: {data_min} m/s')
print(f'Average speed: {data_average} m/s')

data_m = data_new['VEHICLE_ID'] == 4223
data_m_feb_15 = data_new[data_m][data_new['TIMESTAMP'].dt.date == pd.to_datetime('2023-02-15').date()]
data_m_max = data_m_feb_15['SPEED'].max()
print(f'Maximum speed for vehicle id 4223 on February 15, 2023: {data_m_max} m/s')

data_m_feb_15_row = data_new[data_m][data_new['TIMESTAMP'].dt.date == pd.to_datetime('2023-02-15').date()][data_new['SPEED'] == data_m_max]
print(data_m_feb_15_row)
data_m_feb_15_median = data_m_feb_15['SPEED'].median()
print(f'Median speed for vehicle id 4223 on February 15, 2023: {data_m_feb_15_median} m/s')

