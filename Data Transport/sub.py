# -*- coding: utf-8 -*-
"""sub.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fGZ9k1f-PeYQKkenW3aZkmhh-nNlh_eB
"""

from concurrent.futures import TimeoutError
from google.cloud import pubsub_v1
import time
# TODO(developer)
project_id = "mov-data-eng"
subscription_id = "my-sub-1"
#Number of seconds the subscriber should listen for messages
timeout = 5.0

count = 0
start_time = time.time()
subscriber = pubsub_v1.SubscriberClient()
subscription_path = subscriber.subscription_path(project_id, subscription_id)


#def callback(message: pubsub_v1.subscriber.message.Message) -> None:
 #   global count
  #  print(f"Received {message}.")
   # message.ack()
    #count += 1

def callback(message: pubsub_v1.subscriber.message.Message) -> None:
    global count
    count += 1
    if count % 10000 == 0:
        print(f"Received {count} messages.")
    message.ack()
streaming_pull_future = subscriber.subscribe(subscription_path, callback=callback)
print(f"Listening for messages on {subscription_path}..\n")
with subscriber:
    try:
        streaming_pull_future.result(timeout=timeout)
    except TimeoutError:
        streaming_pull_future.cancel()
        streaming_pull_future.result()
print("Number of records:", count)
end_time = time.time()
print("Time taken to run the code:", end_time - start_time, "seconds")